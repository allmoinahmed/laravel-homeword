<?php
/*
* 1.Write a PHP function to sort an array of strings by their length, in ascending order.
* (Hint: You can use the usort() function to define a custom sorting function.)
*/

function sortStringsByLength(array $strings): array {
    usort($strings, function($a, $b) {
        return strlen($a) - strlen($b);
    });
    return $strings;
}

$strings = array("banana", "apple", "pear", "orange");
$sorted = sortStringsByLength($strings);
print_r($sorted);



/*
* 2: Write a PHP function to concatenate two strings, but with the second
* string starting from the end of the first string.
*/
function concatBackwards(string $string1, string $string2): string {
    $len1 = strlen($string1);
    $len2 = strlen($string2);
    $combined = $string1;
    for ($i = $len2 - 1; $i >= 0; $i--) {
        $combined .= $string2[$i];
    }
    return $combined;
}

$string1 = "hello";
$string2 = "world";
$result = concatBackwards($string1, $string2);
echo $result;


/*
* 3: Write a PHP function to remove the first and last element from
* an array and return the remaining elements as a new array.
*/

function removeFirstLast(array $arr): array {
    array_shift($arr); // remove first element
    array_pop($arr); // remove last element
    return $arr;
}

$myArray = array('apple', 'banana', 'cherry', 'date', 'elderberry');
$trimmedArray = removeFirstLast($myArray);
print_r($trimmedArray);


/*
* 4: Write a PHP function to check if a string contains
* only letters and whitespace.
*/
function onlyLettersAndWhitespace(string $str): bool {
    return preg_match('/^[a-zA-Z\s]+$/', $str) === 1;
}

$txt1 = "This is a text with only letters and whitespace";
$txt2 = "This is a text with an ! exclamation mark";
if (onlyLettersAndWhitespace($txt1)) {
    echo "Text 1 contains only letters and whitespace\n";
} else {
    echo "Text 1 contains non-letter or non-whitespace characters\n";
}
if (onlyLettersAndWhitespace($txt2)) {
    echo "Text 2 contains only letters and whitespace\n";
} else {
    echo "Text 2 contains non-letter or non-whitespace characters\n";
}

/*
* 5: Write a PHP function to find the second largest
* number in an array of numbers.
*/
function find2ndLargestNumber(array $numbers): ?int {
    $count = count($numbers);
    if ($count < 2) {
        return null;
    }
    $max = $numbers[0];
    $second_max = $numbers[0];
    for ($i = 1; $i < $count; $i++) {
        if ($numbers[$i] > $max) {
            $second_max = $max;
            $max = $numbers[$i];
        } elseif ($numbers[$i] > $second_max && $numbers[$i] != $max) {
            $second_max = $numbers[$i];
        }
    }
    return $second_max;
}

$num1 = [1, 2, 3, 4, 5];
$num2 = [5, 4, 3, 2, 1];

$second_largest1 = find2ndLargestNumber($num1);
$second_largest2 = find2ndLargestNumber($num2);

echo "2nd largest number in array 1: $second_largest1\n";
echo "2nd largest number in array 2: $second_largest2\n";

